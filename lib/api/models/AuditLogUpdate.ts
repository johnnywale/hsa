/* tslint:disable */
/* eslint-disable */
/**
 * SRE DynamoDB Table definition - OpenAPI 3.0
 * DynamoDB Data doc for SRE Project
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Update model for AuditLog. Cannot update ID or audit fields (createdAt).
 * @export
 * @interface AuditLogUpdate
 */
export interface AuditLogUpdate {
    /**
     * Name of the action performed (e.g., CREATE, UPDATE, DELETE)
     * @type {string}
     * @memberof AuditLogUpdate
     */
    action?: string;
    /**
     * ID of the entity affected by the action
     * @type {string}
     * @memberof AuditLogUpdate
     */
    entityId?: string;
    /**
     * Type of entity affected by the action (e.g., User, Document)
     * @type {string}
     * @memberof AuditLogUpdate
     */
    entityType?: string;
    /**
     * Outcome of the action (e.g., SUCCESS, FAILURE)
     * @type {string}
     * @memberof AuditLogUpdate
     */
    status?: string;
    /**
     * ID of the user who performed the action (optional if system-generated)
     * @type {string}
     * @memberof AuditLogUpdate
     */
    userId?: string;
}

/**
 * Check if a given object implements the AuditLogUpdate interface.
 */
export function instanceOfAuditLogUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuditLogUpdateFromJSON(json: any): AuditLogUpdate {
    return AuditLogUpdateFromJSONTyped(json, false);
}

export function AuditLogUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuditLogUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'action': !exists(json, 'action') ? undefined : json['action'],
        'entityId': !exists(json, 'entityId') ? undefined : json['entityId'],
        'entityType': !exists(json, 'entityType') ? undefined : json['entityType'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function AuditLogUpdateToJSON(value?: AuditLogUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'action': value.action,
        'entityId': value.entityId,
        'entityType': value.entityType,
        'status': value.status,
        'userId': value.userId,
    };
}

