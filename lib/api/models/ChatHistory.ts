/* tslint:disable */
/* eslint-disable */
/**
 * SRE DynamoDB Table definition - OpenAPI 3.0
 * DynamoDB Data doc for SRE Project
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChatHistory
 */
export interface ChatHistory {
    /**
     * 
     * @type {Date}
     * @memberof ChatHistory
     */
    createdAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof ChatHistory
     */
    id: number;
    /**
     * JSON array of messages with role, content, timestamp
     * @type {string}
     * @memberof ChatHistory
     */
    messages: string;
    /**
     * 
     * @type {string}
     * @memberof ChatHistory
     */
    modelId?: string;
    /**
     * 
     * @type {string}
     * @memberof ChatHistory
     */
    presetId?: string;
    /**
     * 
     * @type {Date}
     * @memberof ChatHistory
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof ChatHistory
     */
    userId: string;
}

/**
 * Check if a given object implements the ChatHistory interface.
 */
export function instanceOfChatHistory(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "messages" in value;
    isInstance = isInstance && "userId" in value;

    return isInstance;
}

export function ChatHistoryFromJSON(json: any): ChatHistory {
    return ChatHistoryFromJSONTyped(json, false);
}

export function ChatHistoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChatHistory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'id': json['id'],
        'messages': json['messages'],
        'modelId': !exists(json, 'modelId') ? undefined : json['modelId'],
        'presetId': !exists(json, 'presetId') ? undefined : json['presetId'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'userId': json['userId'],
    };
}

export function ChatHistoryToJSON(value?: ChatHistory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'id': value.id,
        'messages': value.messages,
        'modelId': value.modelId,
        'presetId': value.presetId,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'userId': value.userId,
    };
}

