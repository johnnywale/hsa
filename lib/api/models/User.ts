/* tslint:disable */
/* eslint-disable */
/**
 * SRE DynamoDB Table definition - OpenAPI 3.0
 * DynamoDB Data doc for SRE Project
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    createdAt?: Date;
    /**
     * Unique email
     * @type {string}
     * @memberof User
     */
    email: string;
    /**
     * Optional full name
     * @type {string}
     * @memberof User
     */
    fullName?: string;
    /**
     * User unique identifier
     * @type {number}
     * @memberof User
     */
    id: number;
    /**
     * User active status
     * @type {boolean}
     * @memberof User
     */
    isActive?: boolean;
    /**
     * Hashed password
     * @type {string}
     * @memberof User
     */
    passwordHash: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof User
     */
    roles?: Array<string>;
    /**
     * 
     * @type {Date}
     * @memberof User
     */
    updatedAt?: Date;
    /**
     * Unique username
     * @type {string}
     * @memberof User
     */
    username: string;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "passwordHash" in value;
    isInstance = isInstance && "username" in value;

    return isInstance;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'email': json['email'],
        'fullName': !exists(json, 'fullName') ? undefined : json['fullName'],
        'id': json['id'],
        'isActive': !exists(json, 'isActive') ? undefined : json['isActive'],
        'passwordHash': json['passwordHash'],
        'roles': !exists(json, 'roles') ? undefined : json['roles'],
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
        'username': json['username'],
    };
}

export function UserToJSON(value?: User | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'email': value.email,
        'fullName': value.fullName,
        'id': value.id,
        'isActive': value.isActive,
        'passwordHash': value.passwordHash,
        'roles': value.roles,
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'username': value.username,
    };
}

