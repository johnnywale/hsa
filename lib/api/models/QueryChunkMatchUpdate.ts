/* tslint:disable */
/* eslint-disable */
/**
 * SRE DynamoDB Table definition - OpenAPI 3.0
 * DynamoDB Data doc for SRE Project
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Model for updating QueryChunkMatch
 * @export
 * @interface QueryChunkMatchUpdate
 */
export interface QueryChunkMatchUpdate {
    /**
     * The ID of the chunk.
     * @type {string}
     * @memberof QueryChunkMatchUpdate
     */
    chunkId?: string;
    /**
     * The ID of the query.
     * @type {string}
     * @memberof QueryChunkMatchUpdate
     */
    queryId?: string;
    /**
     * The rank of the chunk for the query.
     * @type {number}
     * @memberof QueryChunkMatchUpdate
     */
    rank?: number;
    /**
     * The relevance score of the chunk for the query.
     * @type {number}
     * @memberof QueryChunkMatchUpdate
     */
    score?: number;
}

/**
 * Check if a given object implements the QueryChunkMatchUpdate interface.
 */
export function instanceOfQueryChunkMatchUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function QueryChunkMatchUpdateFromJSON(json: any): QueryChunkMatchUpdate {
    return QueryChunkMatchUpdateFromJSONTyped(json, false);
}

export function QueryChunkMatchUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryChunkMatchUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chunkId': !exists(json, 'chunkId') ? undefined : json['chunkId'],
        'queryId': !exists(json, 'queryId') ? undefined : json['queryId'],
        'rank': !exists(json, 'rank') ? undefined : json['rank'],
        'score': !exists(json, 'score') ? undefined : json['score'],
    };
}

export function QueryChunkMatchUpdateToJSON(value?: QueryChunkMatchUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chunkId': value.chunkId,
        'queryId': value.queryId,
        'rank': value.rank,
        'score': value.score,
    };
}

