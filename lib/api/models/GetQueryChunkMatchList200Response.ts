/* tslint:disable */
/* eslint-disable */
/**
 * SRE DynamoDB Table definition - OpenAPI 3.0
 * DynamoDB Data doc for SRE Project
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { QueryChunkMatch } from './QueryChunkMatch';
import {
    QueryChunkMatchFromJSON,
    QueryChunkMatchFromJSONTyped,
    QueryChunkMatchToJSON,
} from './QueryChunkMatch';

/**
 * 
 * @export
 * @interface GetQueryChunkMatchList200Response
 */
export interface GetQueryChunkMatchList200Response {
    /**
     * 
     * @type {Array<QueryChunkMatch>}
     * @memberof GetQueryChunkMatchList200Response
     */
    items: Array<QueryChunkMatch>;
    /**
     * Current page number
     * @type {number}
     * @memberof GetQueryChunkMatchList200Response
     */
    page: number;
    /**
     * Number of items per page
     * @type {number}
     * @memberof GetQueryChunkMatchList200Response
     */
    pageSize: number;
    /**
     * Total number of items available
     * @type {number}
     * @memberof GetQueryChunkMatchList200Response
     */
    totalItems: number;
    /**
     * Total number of pages
     * @type {number}
     * @memberof GetQueryChunkMatchList200Response
     */
    totalPages: number;
}

/**
 * Check if a given object implements the GetQueryChunkMatchList200Response interface.
 */
export function instanceOfGetQueryChunkMatchList200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "page" in value;
    isInstance = isInstance && "pageSize" in value;
    isInstance = isInstance && "totalItems" in value;
    isInstance = isInstance && "totalPages" in value;

    return isInstance;
}

export function GetQueryChunkMatchList200ResponseFromJSON(json: any): GetQueryChunkMatchList200Response {
    return GetQueryChunkMatchList200ResponseFromJSONTyped(json, false);
}

export function GetQueryChunkMatchList200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetQueryChunkMatchList200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(QueryChunkMatchFromJSON)),
        'page': json['page'],
        'pageSize': json['page_size'],
        'totalItems': json['total_items'],
        'totalPages': json['total_pages'],
    };
}

export function GetQueryChunkMatchList200ResponseToJSON(value?: GetQueryChunkMatchList200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(QueryChunkMatchToJSON)),
        'page': value.page,
        'page_size': value.pageSize,
        'total_items': value.totalItems,
        'total_pages': value.totalPages,
    };
}

