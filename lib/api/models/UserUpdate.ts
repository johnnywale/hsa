/* tslint:disable */
/* eslint-disable */
/**
 * SRE DynamoDB Table definition - OpenAPI 3.0
 * DynamoDB Data doc for SRE Project
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Model for updating a user.  Allows updating of all fields except ID, creation and modification timestamps.
 * @export
 * @interface UserUpdate
 */
export interface UserUpdate {
    /**
     * Unique email address (must be unique).
     * @type {string}
     * @memberof UserUpdate
     */
    email?: string;
    /**
     * Optional full name.
     * @type {string}
     * @memberof UserUpdate
     */
    fullName?: string;
    /**
     * User active status.  Set to true to activate the user, false to deactivate.
     * @type {boolean}
     * @memberof UserUpdate
     */
    isActive?: boolean;
    /**
     * Hashed password.  Consider how you will handle password updates (e.g., requiring the old password).
     * @type {string}
     * @memberof UserUpdate
     */
    passwordHash?: string;
    /**
     * An array of roles assigned to the user.
     * @type {Array<string>}
     * @memberof UserUpdate
     */
    roles?: Array<string>;
    /**
     * Unique username (must be unique).
     * @type {string}
     * @memberof UserUpdate
     */
    username?: string;
}

/**
 * Check if a given object implements the UserUpdate interface.
 */
export function instanceOfUserUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserUpdateFromJSON(json: any): UserUpdate {
    return UserUpdateFromJSONTyped(json, false);
}

export function UserUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': !exists(json, 'email') ? undefined : json['email'],
        'fullName': !exists(json, 'fullName') ? undefined : json['fullName'],
        'isActive': !exists(json, 'isActive') ? undefined : json['isActive'],
        'passwordHash': !exists(json, 'passwordHash') ? undefined : json['passwordHash'],
        'roles': !exists(json, 'roles') ? undefined : json['roles'],
        'username': !exists(json, 'username') ? undefined : json['username'],
    };
}

export function UserUpdateToJSON(value?: UserUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'fullName': value.fullName,
        'isActive': value.isActive,
        'passwordHash': value.passwordHash,
        'roles': value.roles,
        'username': value.username,
    };
}

