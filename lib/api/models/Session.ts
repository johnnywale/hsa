/* tslint:disable */
/* eslint-disable */
/**
 * SRE DynamoDB Table definition - OpenAPI 3.0
 * DynamoDB Data doc for SRE Project
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Session
 */
export interface Session {
    /**
     * 
     * @type {Date}
     * @memberof Session
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Session
     */
    expiresAt: Date;
    /**
     * 
     * @type {number}
     * @memberof Session
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof Session
     */
    revokedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Session
     */
    token: string;
    /**
     * 
     * @type {string}
     * @memberof Session
     */
    userId: string;
}

/**
 * Check if a given object implements the Session interface.
 */
export function instanceOfSession(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "expiresAt" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "token" in value;
    isInstance = isInstance && "userId" in value;

    return isInstance;
}

export function SessionFromJSON(json: any): Session {
    return SessionFromJSONTyped(json, false);
}

export function SessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Session {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'expiresAt': (new Date(json['expiresAt'])),
        'id': json['id'],
        'revokedAt': !exists(json, 'revokedAt') ? undefined : (new Date(json['revokedAt'])),
        'token': json['token'],
        'userId': json['userId'],
    };
}

export function SessionToJSON(value?: Session | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'expiresAt': (value.expiresAt.toISOString()),
        'id': value.id,
        'revokedAt': value.revokedAt === undefined ? undefined : (value.revokedAt.toISOString()),
        'token': value.token,
        'userId': value.userId,
    };
}

