/* tslint:disable */
/* eslint-disable */
/**
 * SRE DynamoDB Table definition - OpenAPI 3.0
 * DynamoDB Data doc for SRE Project
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Update model for Documents.  Allows updating existing fields.
 * @export
 * @interface DocumentUpdate
 */
export interface DocumentUpdate {
    /**
     * The ACL group that controls access to the document.
     * @type {string}
     * @memberof DocumentUpdate
     */
    aclGroup?: string;
    /**
     * The author of the document.
     * @type {string}
     * @memberof DocumentUpdate
     */
    author?: string;
    /**
     * The type of document (e.g., PDF, DOCX).
     * @type {string}
     * @memberof DocumentUpdate
     */
    docType?: string;
    /**
     * Indicates if the document is currently active.
     * @type {boolean}
     * @memberof DocumentUpdate
     */
    isActive?: boolean;
    /**
     * The URL where the document originates from.
     * @type {string}
     * @memberof DocumentUpdate
     */
    sourceUrl?: string;
    /**
     * The title of the document.
     * @type {string}
     * @memberof DocumentUpdate
     */
    title?: string;
    /**
     * The version of the document.
     * @type {string}
     * @memberof DocumentUpdate
     */
    version?: string;
}

/**
 * Check if a given object implements the DocumentUpdate interface.
 */
export function instanceOfDocumentUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DocumentUpdateFromJSON(json: any): DocumentUpdate {
    return DocumentUpdateFromJSONTyped(json, false);
}

export function DocumentUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): DocumentUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'aclGroup': !exists(json, 'aclGroup') ? undefined : json['aclGroup'],
        'author': !exists(json, 'author') ? undefined : json['author'],
        'docType': !exists(json, 'docType') ? undefined : json['docType'],
        'isActive': !exists(json, 'isActive') ? undefined : json['isActive'],
        'sourceUrl': !exists(json, 'sourceUrl') ? undefined : json['sourceUrl'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'version': !exists(json, 'version') ? undefined : json['version'],
    };
}

export function DocumentUpdateToJSON(value?: DocumentUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'aclGroup': value.aclGroup,
        'author': value.author,
        'docType': value.docType,
        'isActive': value.isActive,
        'sourceUrl': value.sourceUrl,
        'title': value.title,
        'version': value.version,
    };
}

