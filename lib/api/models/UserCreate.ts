/* tslint:disable */
/* eslint-disable */
/**
 * SRE DynamoDB Table definition - OpenAPI 3.0
 * DynamoDB Data doc for SRE Project
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserCreate
 */
export interface UserCreate {
    /**
     * Unique email
     * @type {string}
     * @memberof UserCreate
     */
    email: string;
    /**
     * Optional full name
     * @type {string}
     * @memberof UserCreate
     */
    fullName?: string;
    /**
     * User active status
     * @type {boolean}
     * @memberof UserCreate
     */
    isActive?: boolean;
    /**
     * password
     * @type {string}
     * @memberof UserCreate
     */
    password?: string;
    /**
     * User roles (array of strings)
     * @type {Array<string>}
     * @memberof UserCreate
     */
    roles?: Array<string>;
    /**
     * Unique username
     * @type {string}
     * @memberof UserCreate
     */
    username: string;
}

/**
 * Check if a given object implements the UserCreate interface.
 */
export function instanceOfUserCreate(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "username" in value;

    return isInstance;
}

export function UserCreateFromJSON(json: any): UserCreate {
    return UserCreateFromJSONTyped(json, false);
}

export function UserCreateFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserCreate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'email': json['email'],
        'fullName': !exists(json, 'fullName') ? undefined : json['fullName'],
        'isActive': !exists(json, 'isActive') ? undefined : json['isActive'],
        'password': !exists(json, 'password') ? undefined : json['password'],
        'roles': !exists(json, 'roles') ? undefined : json['roles'],
        'username': json['username'],
    };
}

export function UserCreateToJSON(value?: UserCreate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'email': value.email,
        'fullName': value.fullName,
        'isActive': value.isActive,
        'password': value.password,
        'roles': value.roles,
        'username': value.username,
    };
}

