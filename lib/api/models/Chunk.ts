/* tslint:disable */
/* eslint-disable */
/**
 * SRE DynamoDB Table definition - OpenAPI 3.0
 * DynamoDB Data doc for SRE Project
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Chunk
 */
export interface Chunk {
    /**
     * 
     * @type {string}
     * @memberof Chunk
     */
    checksum?: string;
    /**
     * 
     * @type {number}
     * @memberof Chunk
     */
    chunkIndex: number;
    /**
     * 
     * @type {string}
     * @memberof Chunk
     */
    content: string;
    /**
     * 
     * @type {Date}
     * @memberof Chunk
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof Chunk
     */
    documentId: string;
    /**
     * 
     * @type {number}
     * @memberof Chunk
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof Chunk
     */
    tokenCount?: number;
}

/**
 * Check if a given object implements the Chunk interface.
 */
export function instanceOfChunk(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "chunkIndex" in value;
    isInstance = isInstance && "content" in value;
    isInstance = isInstance && "documentId" in value;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function ChunkFromJSON(json: any): Chunk {
    return ChunkFromJSONTyped(json, false);
}

export function ChunkFromJSONTyped(json: any, ignoreDiscriminator: boolean): Chunk {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'checksum': !exists(json, 'checksum') ? undefined : json['checksum'],
        'chunkIndex': json['chunkIndex'],
        'content': json['content'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'documentId': json['documentId'],
        'id': json['id'],
        'tokenCount': !exists(json, 'tokenCount') ? undefined : json['tokenCount'],
    };
}

export function ChunkToJSON(value?: Chunk | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'checksum': value.checksum,
        'chunkIndex': value.chunkIndex,
        'content': value.content,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'documentId': value.documentId,
        'id': value.id,
        'tokenCount': value.tokenCount,
    };
}

