/* tslint:disable */
/* eslint-disable */
/**
 * SRE DynamoDB Table definition - OpenAPI 3.0
 * DynamoDB Data doc for SRE Project
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Model for updating an existing chunk.
 * @export
 * @interface ChunkUpdate
 */
export interface ChunkUpdate {
    /**
     * A checksum of the chunk's content.
     * @type {string}
     * @memberof ChunkUpdate
     */
    checksum?: string;
    /**
     * The index of this chunk within the document.
     * @type {number}
     * @memberof ChunkUpdate
     */
    chunkIndex?: number;
    /**
     * The content of the chunk.
     * @type {string}
     * @memberof ChunkUpdate
     */
    content?: string;
    /**
     * The ID of the document this chunk belongs to.
     * @type {string}
     * @memberof ChunkUpdate
     */
    documentId?: string;
    /**
     * The number of tokens in the chunk.
     * @type {number}
     * @memberof ChunkUpdate
     */
    tokenCount?: number;
}

/**
 * Check if a given object implements the ChunkUpdate interface.
 */
export function instanceOfChunkUpdate(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChunkUpdateFromJSON(json: any): ChunkUpdate {
    return ChunkUpdateFromJSONTyped(json, false);
}

export function ChunkUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChunkUpdate {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'checksum': !exists(json, 'checksum') ? undefined : json['checksum'],
        'chunkIndex': !exists(json, 'chunkIndex') ? undefined : json['chunkIndex'],
        'content': !exists(json, 'content') ? undefined : json['content'],
        'documentId': !exists(json, 'documentId') ? undefined : json['documentId'],
        'tokenCount': !exists(json, 'tokenCount') ? undefined : json['tokenCount'],
    };
}

export function ChunkUpdateToJSON(value?: ChunkUpdate | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'checksum': value.checksum,
        'chunkIndex': value.chunkIndex,
        'content': value.content,
        'documentId': value.documentId,
        'tokenCount': value.tokenCount,
    };
}

